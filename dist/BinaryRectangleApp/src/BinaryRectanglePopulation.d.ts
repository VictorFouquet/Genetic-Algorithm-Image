import { Population } from "../../GA";
import { BinaryRectangleIndividual } from "./BinaryRectangleIndividual";
import { _ImageData } from "../../Canvas/interfaces/ImageData.interface";
/**
 * Population representing solutions to the Binary Rectangle Problem
 */
export declare class BinaryRectanglePopulation extends Population<BinaryRectangleIndividual> {
    refImage: _ImageData;
    refImageData: number[];
    averageFitnesses: number[];
    cache: {
        [genotype: string]: number;
    };
    /**
     * Builds a new population and sets individual class static variables
     * @param individualCount number of individuals to evolve
     * @param refImage ImageData of the reference image
     * @param mutationRate population's mutation rate
     */
    constructor(individualCount: number, refImage: _ImageData, mutationRate: number);
    /**
     * Computes the image generated by drawing the individual's rectangle on a canvas
     * @param individual individual storing the genes to get the phenotype from
     * @returns values of the pixels in the individual's generated image
     */
    getPhenotype(individual: BinaryRectangleIndividual): number[];
    /**
     * Computes fitness for each individual
     * @returns this population individuals with updated fitness
     */
    evaluate(): BinaryRectangleIndividual[];
    /**
     * Mutates individuals' genes
     * @returns this populations individual after mutation
     */
    mutate(): BinaryRectangleIndividual[];
    /** Keeps population with a constant number of individuals from generation to generation. */
    cull(): void;
}
